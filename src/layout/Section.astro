---
import SectionControls from "../components/SectionControls.astro";

interface Props {
    bgColor?: string;
    showMenu?: boolean;
    showXDisplacement?: boolean;
    showWipeAngle?: boolean;
    showStaticXOffset?: boolean;
}

const {
    bgColor = "bg-gray-500",
    showMenu = false,
    showXDisplacement = true,
    showWipeAngle = true,
    showStaticXOffset = true,
} = Astro.props;
const uniqueId = `section-${Math.random().toString(36).slice(2, 9)}`;
---

{
    showMenu && (
        <SectionControls
            sectionId={uniqueId}
            bgColor={bgColor}
            title="Controls"
            showXDisplacement={showXDisplacement}
            showWipeAngle={showWipeAngle}
            showStaticXOffset={showStaticXOffset}
        />
    )
}

<div
    id={uniqueId}
    class:list={["h-full w-full absolute inset-0 z-10", bgColor]}
>
    <section class="grid place-items-center h-full text-5xl font-extrabold">
        <slot />
    </section>
</div>

<style>
    [id^="section-"] {
        --x-displacement: 0%;
        --static-x-offset: 0%;
        --wipe-angle: 40%;

        --x1-position: var(--static-x-offset);
        --y1-position: 0%;

        --x2-position: var(--static-x-offset);
        --y2-position: 100%;

        --wipe-angle-modified: calc(var(--wipe-angle) - var(--static-x-offset));

        --x3-position: calc(
            var(--wipe-angle) + var(--x2-position) + var(--x-displacement)
        );
        --y3-position: var(--y2-position);

        --x4-position: calc(var(--x1-position) + var(--x-displacement));
        --y4-position: var(--y1-position);
    }

    [id^="section-"] {
        clip-path: polygon(
            var(--x1-position) var(--y1-position),
            var(--x2-position) var(--y2-position),
            var(--x3-position) var(--y3-position),
            var(--x4-position) var(--y4-position)
        );
    }
</style>
