---
import "../styles/global.css";
import Frame from "../components/layout/Frame.astro";
import NavBar from "../components/ui/NavBar.astro";
import PanelStack from "../components/panels/PanelStack.astro";

// Lee las variables de entorno.
const enableNoise = import.meta.env.ENABLE_NOISE === "true";
const enableNoiseAnimation = import.meta.env.ENABLE_NOISE_ANIMATION === "true";
---

<!doctype html>
<html lang="es" class="dark">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width,initial-scale=1" />
		<title>Demo Polaroid Panels</title>
	</head>

	<body class="bg-[#111111] m-0 overflow-hidden">
		{
			enableNoise && (
				<div class="noise bg-[url('/noiseTex.webp')] absolute bg-repeat inset-[-20px]" />
			)
		}
		<!-- Ocupa 100vw x 100dvh garantizado -->
		<main id="app-main" class="h-[100dvh] w-screen p-4 box-border">
			<Frame class="h-full w-full">
				<div class="flex flex-col h-full">
					<div class="flex-1 min-h-0 w-full relative">
						<PanelStack>
							<!-- Nav dentro del contenedor de secciones, flotando arriba -->
							<div
								class="absolute top-3 left-0 right-0 z-50 flex justify-center"
							>
								<NavBar />
							</div>
						</PanelStack>
					</div>
				</div>
			</Frame>
		</main>
	</body>
</html>

<script define:vars={{ enableNoise, enableNoiseAnimation }}>
	if (enableNoise) {
		const noiseElement = document.querySelector(".noise");

		if (noiseElement && enableNoiseAnimation) {
			// Optimización para el navegador
			noiseElement.style.willChange = "transform";

			const animateNoise = () => {
				// Genera un desplazamiento aleatorio
				const x = Math.floor(Math.random() * 20) - 3;
				const y = Math.floor(Math.random() * 25) - 5;

				noiseElement.style.transform = `translate(${x}px, ${y}px)`;
			};

			// Llama a la función para crear el efecto "entrecortado"
			setInterval(animateNoise, 120);
		}
	}
</script>
