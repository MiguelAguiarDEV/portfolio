---
export interface NavItem {
    id: string;
    label: string;
}

export interface Props {
    items: NavItem[];
}

const { items } = Astro.props;
---

<nav class="navbar" aria-label="Secciones">
    {
        items.map((item, index) => (
            <button
                data-target={item.id}
                aria-current={index === 0 ? "page" : "false"}
            >
                {item.label}
            </button>
        ))
    }
</nav>

<style>
    .navbar {
        position: fixed;
        left: 50%;
        top: 3vh;
        transform: translateX(-50%);
        z-index: 1000;
        height: var(--nav-h);
        display: flex;
        align-items: center;
        gap: var(--gap);
        padding: 0 var(--pad);
        border-radius: 999px;
        background: color-mix(in oklab, #ffffff 14%, transparent);
        backdrop-filter: blur(14px) saturate(140%);
        -webkit-backdrop-filter: blur(14px) saturate(140%);
        box-shadow: 0 6px 24px rgba(0, 0, 0, 0.25);
        pointer-events: auto;
    }

    .navbar button {
        appearance: none;
        border: 0;
        background: transparent;
        color: #fff;
        font-size: var(--fs-1);
        padding: 8px 12px;
        border-radius: 10px;
        cursor: pointer;
        opacity: 0.75;
        transition:
            opacity 0.2s,
            transform 0.2s,
            background-color 0.2s;
        white-space: nowrap;
    }

    .navbar button[aria-current="page"] {
        opacity: 1;
        background: color-mix(in oklab, #ffffff 16%, transparent);
    }

    .navbar button:active {
        transform: scale(0.98);
    }
</style>
